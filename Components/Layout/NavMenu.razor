@using MDTadusMod.Components.Shared
@using MDTadusMod.Services
@inject NavigationManager NavigationManager
@inject ReloadQueueService ReloadQueue
@implements IDisposable

<nav class="flex-column">
    <UpdateIndicator />
    <div class="intro"></div>
    <div class="right">
        @if (IsOnSettingsPage())
        {
            <div class="nav-item">
                <NavLink class="nav-link" href="settings/accounts">
                    Accounts
                </NavLink>
            </div>
            <div class="nav-item">
                <NavLink class="nav-link" href="settings/groups">
                    Groups
                </NavLink>
            </div>

            <div class="nav-item">
                <NavLink class="nav-link no-active" href="">
                    Back
                </NavLink>
            </div>
        }
        else
        {
            <OptionsMenu />
            <ReloadButton />
            <div class="nav-item">
                <NavLink class="nav-link" href="settings">
                    Settings
                </NavLink>
            </div>
        }
    </div>
</nav>

@code {
    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += HandleLocationChanged;
    }

    private bool IsOnSettingsPage()
    {
        var relativeUri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        return relativeUri.StartsWith("settings", StringComparison.OrdinalIgnoreCase);
    }

    private void HandleLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }
}
